[run]
omit = revelation/test/*
data_file = ./.coverage
source = revelation/

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    except subprocess.CalledProcessError as excn:
    raise NotImplementedError

    # Don't complain if tests take a path which is only used in a test harness:
    def init_state
    def iread

    # Don't complain about code that only executes when translated.
    .*we_are_translated.*
    def get_location
    _RevelationByteMemory

    # Don't complain about every single status bit.
    self._get_nth_bit_of_register
    self._set_nth_bit_of_register

    # Don't complain about not generating debug output.
    if self.debug.enabled('flags'):
    if self.debug.enabled('rf'):
    if self.debug.enabled('mem'):
    if self.debug.enabled('memcheck'):
    if s.debug.enabled('trace'):
    if not sparse_storage:
    if self.debug.enabled_flags:
    if self.logger:
    self.logger.log
    self.logger = Logger(LOG_FILENAME)
    self.memory.debug.enabled_flags
    s.debug_flags()
    print

    # Don't complain about invalid memory accesses.
    if addr > self.size:


    # Don't complain about assertions in syscalls -- special code for debuggers
    inst.t5 == 4
    inst.t5 == 5

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about code that executes if pypy is not on the PYTHONPATH.
    except ImportError:

    # Don't complain about importing anything rpython related.
    from rpython*
